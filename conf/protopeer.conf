#whether it's a live run or not (some classes might want to know that)
liveRun=true

#in protopeer.util.Experiment - the master seed to use for the randomness source, 
#if it equals 0 then System.nanoTime() is used as the seed 
#masterSeed=4396492378
masterSeed=0

#in protopeer.measurement.MeasurementLoggger - how long the measurement epoch should be in milliseconds  
measurementEpochDuration = 1e3

#in protopeer.servers.bootstrap:
#number of core peers to wait for before sending the initialization messages 
#NOTE IF YOU MODIFY HERE YOU ALSO NEED TO CHANGE THE LiveExperiment CLASS CODE
initialCoreNodes=3
#the number of peers to which each peer should be connected to after the bootstrap process
initialNodeDegree=2
#the 
#BINARY, UNIFORM, GAUSSIAN_MIXTURE, EXPONENTIAL, AOL
identifierInitialization=UNIFORM
#the time 
bootstrapTimeout=60e3

#in protopeer.scenarios - tells the ScenarioExector which time should be considered as time 0 (in milliseconds)
scenarioExecutorTimeZero=0.0

#in protopeer.time.RealClock - normally all the timer expiration events are handled in a single thread, 
#if multiThreadedTimers is enabled, ProtoPeer creates a pool of threads to handle the events  
multiThreadedTimers=false

#in protopeer.time.RealClock - what is the time offset of the clock of this machine against a more precise source 
#(some NTP server for example), in seconds, can use fractions. This is mainly used as a simple way for synchronizing the clocks
#of the peers in a distributed experiment
clockOffset=0.0

# used during live runs 
#peerIP=10.201.5.45
peerIP=127.0.0.1
peerPort=0
peerZeroIP=127.0.0.1
peerZeroPort=5555
#in a single peer live runs, configures this peer with a specific peerIndex
peerIndex=0

#frequently used option, but not require - how many peer instances should be created for the simulation
numPeersInSim=257

#EXPERIMENTAL
enableMessageSerializationDuringSimulation=false
enableLightweightSerialization=false

#if non-empty, the Experiment will serialize the measurement logs to this file
rootMeasurementLogFilename=
